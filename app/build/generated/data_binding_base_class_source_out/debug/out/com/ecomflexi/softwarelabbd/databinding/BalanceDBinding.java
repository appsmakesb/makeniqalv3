// Generated by view binder compiler. Do not edit!
package com.ecomflexi.softwarelabbd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ecomflexi.softwarelabbd.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BalanceDBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button balanceC;

  @NonNull
  public final RadioButton bank;

  @NonNull
  public final ImageView close;

  @NonNull
  public final RadioButton drive;

  @NonNull
  public final RelativeLayout four;

  @NonNull
  public final TextView link;

  @NonNull
  public final RadioButton main;

  @NonNull
  public final RadioGroup typep;

  private BalanceDBinding(@NonNull LinearLayout rootView, @NonNull Button balanceC,
      @NonNull RadioButton bank, @NonNull ImageView close, @NonNull RadioButton drive,
      @NonNull RelativeLayout four, @NonNull TextView link, @NonNull RadioButton main,
      @NonNull RadioGroup typep) {
    this.rootView = rootView;
    this.balanceC = balanceC;
    this.bank = bank;
    this.close = close;
    this.drive = drive;
    this.four = four;
    this.link = link;
    this.main = main;
    this.typep = typep;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BalanceDBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BalanceDBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.balance_d, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BalanceDBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.balance_c;
      Button balanceC = ViewBindings.findChildViewById(rootView, id);
      if (balanceC == null) {
        break missingId;
      }

      id = R.id.bank;
      RadioButton bank = ViewBindings.findChildViewById(rootView, id);
      if (bank == null) {
        break missingId;
      }

      id = R.id.close;
      ImageView close = ViewBindings.findChildViewById(rootView, id);
      if (close == null) {
        break missingId;
      }

      id = R.id.drive;
      RadioButton drive = ViewBindings.findChildViewById(rootView, id);
      if (drive == null) {
        break missingId;
      }

      id = R.id.four;
      RelativeLayout four = ViewBindings.findChildViewById(rootView, id);
      if (four == null) {
        break missingId;
      }

      id = R.id.link;
      TextView link = ViewBindings.findChildViewById(rootView, id);
      if (link == null) {
        break missingId;
      }

      id = R.id.main;
      RadioButton main = ViewBindings.findChildViewById(rootView, id);
      if (main == null) {
        break missingId;
      }

      id = R.id.typep;
      RadioGroup typep = ViewBindings.findChildViewById(rootView, id);
      if (typep == null) {
        break missingId;
      }

      return new BalanceDBinding((LinearLayout) rootView, balanceC, bank, close, drive, four, link,
          main, typep);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
