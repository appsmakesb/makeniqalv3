// Generated by view binder compiler. Do not edit!
package com.ecomflexi.softwarelabbd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ecomflexi.softwarelabbd.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PinLayoutBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView amount;

  @NonNull
  public final RelativeLayout amountL;

  @NonNull
  public final TextView amountn;

  @NonNull
  public final RelativeLayout hd;

  @NonNull
  public final ImageButton next;

  @NonNull
  public final TextView number;

  @NonNull
  public final ImageView opera;

  @NonNull
  public final FrameLayout operator;

  @NonNull
  public final EditText pin;

  @NonNull
  public final RelativeLayout pkg;

  @NonNull
  public final TextView pkgname;

  @NonNull
  public final RadioButton postpaid;

  @NonNull
  public final RadioButton prepaid;

  @NonNull
  public final RadioButton skitto;

  @NonNull
  public final RadioGroup typep;

  @NonNull
  public final ProgressBar wait;

  private PinLayoutBinding(@NonNull RelativeLayout rootView, @NonNull TextView amount,
      @NonNull RelativeLayout amountL, @NonNull TextView amountn, @NonNull RelativeLayout hd,
      @NonNull ImageButton next, @NonNull TextView number, @NonNull ImageView opera,
      @NonNull FrameLayout operator, @NonNull EditText pin, @NonNull RelativeLayout pkg,
      @NonNull TextView pkgname, @NonNull RadioButton postpaid, @NonNull RadioButton prepaid,
      @NonNull RadioButton skitto, @NonNull RadioGroup typep, @NonNull ProgressBar wait) {
    this.rootView = rootView;
    this.amount = amount;
    this.amountL = amountL;
    this.amountn = amountn;
    this.hd = hd;
    this.next = next;
    this.number = number;
    this.opera = opera;
    this.operator = operator;
    this.pin = pin;
    this.pkg = pkg;
    this.pkgname = pkgname;
    this.postpaid = postpaid;
    this.prepaid = prepaid;
    this.skitto = skitto;
    this.typep = typep;
    this.wait = wait;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PinLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PinLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.pin_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PinLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.amount;
      TextView amount = ViewBindings.findChildViewById(rootView, id);
      if (amount == null) {
        break missingId;
      }

      id = R.id.amount_l;
      RelativeLayout amountL = ViewBindings.findChildViewById(rootView, id);
      if (amountL == null) {
        break missingId;
      }

      id = R.id.amountn;
      TextView amountn = ViewBindings.findChildViewById(rootView, id);
      if (amountn == null) {
        break missingId;
      }

      id = R.id.hd;
      RelativeLayout hd = ViewBindings.findChildViewById(rootView, id);
      if (hd == null) {
        break missingId;
      }

      id = R.id.next;
      ImageButton next = ViewBindings.findChildViewById(rootView, id);
      if (next == null) {
        break missingId;
      }

      id = R.id.number;
      TextView number = ViewBindings.findChildViewById(rootView, id);
      if (number == null) {
        break missingId;
      }

      id = R.id.opera;
      ImageView opera = ViewBindings.findChildViewById(rootView, id);
      if (opera == null) {
        break missingId;
      }

      id = R.id.operator;
      FrameLayout operator = ViewBindings.findChildViewById(rootView, id);
      if (operator == null) {
        break missingId;
      }

      id = R.id.pin;
      EditText pin = ViewBindings.findChildViewById(rootView, id);
      if (pin == null) {
        break missingId;
      }

      id = R.id.pkg;
      RelativeLayout pkg = ViewBindings.findChildViewById(rootView, id);
      if (pkg == null) {
        break missingId;
      }

      id = R.id.pkgname;
      TextView pkgname = ViewBindings.findChildViewById(rootView, id);
      if (pkgname == null) {
        break missingId;
      }

      id = R.id.postpaid;
      RadioButton postpaid = ViewBindings.findChildViewById(rootView, id);
      if (postpaid == null) {
        break missingId;
      }

      id = R.id.prepaid;
      RadioButton prepaid = ViewBindings.findChildViewById(rootView, id);
      if (prepaid == null) {
        break missingId;
      }

      id = R.id.skitto;
      RadioButton skitto = ViewBindings.findChildViewById(rootView, id);
      if (skitto == null) {
        break missingId;
      }

      id = R.id.typep;
      RadioGroup typep = ViewBindings.findChildViewById(rootView, id);
      if (typep == null) {
        break missingId;
      }

      id = R.id.wait;
      ProgressBar wait = ViewBindings.findChildViewById(rootView, id);
      if (wait == null) {
        break missingId;
      }

      return new PinLayoutBinding((RelativeLayout) rootView, amount, amountL, amountn, hd, next,
          number, opera, operator, pin, pkg, pkgname, postpaid, prepaid, skitto, typep, wait);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
