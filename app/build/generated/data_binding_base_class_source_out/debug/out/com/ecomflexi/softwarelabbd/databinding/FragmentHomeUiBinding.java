// Generated by view binder compiler. Do not edit!
package com.ecomflexi.softwarelabbd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.GridView;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ecomflexi.softwarelabbd.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeUiBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout add;

  @NonNull
  public final GridView atachviewx;

  @NonNull
  public final TextView balance;

  @NonNull
  public final TextView fd;

  @NonNull
  public final LinearLayout history;

  @NonNull
  public final ImageView hm;

  @NonNull
  public final LinearLayout itop;

  @NonNull
  public final CircleImageView ivCircularUserImage;

  @NonNull
  public final TextView lev;

  @NonNull
  public final LinearLayout myuser;

  @NonNull
  public final TextView news;

  @NonNull
  public final ImageView notic;

  @NonNull
  public final TextView notice;

  @NonNull
  public final LinearLayout offer;

  @NonNull
  public final LinearLayout refil;

  @NonNull
  public final LinearLayout swipeHomeContainer;

  @NonNull
  public final CardView top;

  @NonNull
  public final LinearLayout transfer;

  @NonNull
  public final RelativeLayout uitop;

  @NonNull
  public final View vi;

  private FragmentHomeUiBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout add,
      @NonNull GridView atachviewx, @NonNull TextView balance, @NonNull TextView fd,
      @NonNull LinearLayout history, @NonNull ImageView hm, @NonNull LinearLayout itop,
      @NonNull CircleImageView ivCircularUserImage, @NonNull TextView lev,
      @NonNull LinearLayout myuser, @NonNull TextView news, @NonNull ImageView notic,
      @NonNull TextView notice, @NonNull LinearLayout offer, @NonNull LinearLayout refil,
      @NonNull LinearLayout swipeHomeContainer, @NonNull CardView top,
      @NonNull LinearLayout transfer, @NonNull RelativeLayout uitop, @NonNull View vi) {
    this.rootView = rootView;
    this.add = add;
    this.atachviewx = atachviewx;
    this.balance = balance;
    this.fd = fd;
    this.history = history;
    this.hm = hm;
    this.itop = itop;
    this.ivCircularUserImage = ivCircularUserImage;
    this.lev = lev;
    this.myuser = myuser;
    this.news = news;
    this.notic = notic;
    this.notice = notice;
    this.offer = offer;
    this.refil = refil;
    this.swipeHomeContainer = swipeHomeContainer;
    this.top = top;
    this.transfer = transfer;
    this.uitop = uitop;
    this.vi = vi;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeUiBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeUiBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home_ui, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeUiBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add;
      LinearLayout add = ViewBindings.findChildViewById(rootView, id);
      if (add == null) {
        break missingId;
      }

      id = R.id.atachviewx;
      GridView atachviewx = ViewBindings.findChildViewById(rootView, id);
      if (atachviewx == null) {
        break missingId;
      }

      id = R.id.balance;
      TextView balance = ViewBindings.findChildViewById(rootView, id);
      if (balance == null) {
        break missingId;
      }

      id = R.id.fd;
      TextView fd = ViewBindings.findChildViewById(rootView, id);
      if (fd == null) {
        break missingId;
      }

      id = R.id.history;
      LinearLayout history = ViewBindings.findChildViewById(rootView, id);
      if (history == null) {
        break missingId;
      }

      id = R.id.hm;
      ImageView hm = ViewBindings.findChildViewById(rootView, id);
      if (hm == null) {
        break missingId;
      }

      id = R.id.itop;
      LinearLayout itop = ViewBindings.findChildViewById(rootView, id);
      if (itop == null) {
        break missingId;
      }

      id = R.id.iv_circular_user_image;
      CircleImageView ivCircularUserImage = ViewBindings.findChildViewById(rootView, id);
      if (ivCircularUserImage == null) {
        break missingId;
      }

      id = R.id.lev;
      TextView lev = ViewBindings.findChildViewById(rootView, id);
      if (lev == null) {
        break missingId;
      }

      id = R.id.myuser;
      LinearLayout myuser = ViewBindings.findChildViewById(rootView, id);
      if (myuser == null) {
        break missingId;
      }

      id = R.id.news;
      TextView news = ViewBindings.findChildViewById(rootView, id);
      if (news == null) {
        break missingId;
      }

      id = R.id.notic;
      ImageView notic = ViewBindings.findChildViewById(rootView, id);
      if (notic == null) {
        break missingId;
      }

      id = R.id.notice;
      TextView notice = ViewBindings.findChildViewById(rootView, id);
      if (notice == null) {
        break missingId;
      }

      id = R.id.offer;
      LinearLayout offer = ViewBindings.findChildViewById(rootView, id);
      if (offer == null) {
        break missingId;
      }

      id = R.id.refil;
      LinearLayout refil = ViewBindings.findChildViewById(rootView, id);
      if (refil == null) {
        break missingId;
      }

      LinearLayout swipeHomeContainer = (LinearLayout) rootView;

      id = R.id.top;
      CardView top = ViewBindings.findChildViewById(rootView, id);
      if (top == null) {
        break missingId;
      }

      id = R.id.transfer;
      LinearLayout transfer = ViewBindings.findChildViewById(rootView, id);
      if (transfer == null) {
        break missingId;
      }

      id = R.id.uitop;
      RelativeLayout uitop = ViewBindings.findChildViewById(rootView, id);
      if (uitop == null) {
        break missingId;
      }

      id = R.id.vi;
      View vi = ViewBindings.findChildViewById(rootView, id);
      if (vi == null) {
        break missingId;
      }

      return new FragmentHomeUiBinding((LinearLayout) rootView, add, atachviewx, balance, fd,
          history, hm, itop, ivCircularUserImage, lev, myuser, news, notic, notice, offer, refil,
          swipeHomeContainer, top, transfer, uitop, vi);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
