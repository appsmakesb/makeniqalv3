// Generated by view binder compiler. Do not edit!
package com.ecomflexi.softwarelabbd.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ecomflexi.softwarelabbd.R;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class InNumberBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView cba;

  @NonNull
  public final Button cont;

  @NonNull
  public final AutoCompleteTextView number;

  @NonNull
  public final EditText pin;

  @NonNull
  public final RadioButton postpaid;

  @NonNull
  public final RadioButton prepaid;

  @NonNull
  public final Button sub;

  @NonNull
  public final TextInputLayout textInputMobile;

  @NonNull
  public final RadioGroup typep;

  private InNumberBinding(@NonNull RelativeLayout rootView, @NonNull TextView cba,
      @NonNull Button cont, @NonNull AutoCompleteTextView number, @NonNull EditText pin,
      @NonNull RadioButton postpaid, @NonNull RadioButton prepaid, @NonNull Button sub,
      @NonNull TextInputLayout textInputMobile, @NonNull RadioGroup typep) {
    this.rootView = rootView;
    this.cba = cba;
    this.cont = cont;
    this.number = number;
    this.pin = pin;
    this.postpaid = postpaid;
    this.prepaid = prepaid;
    this.sub = sub;
    this.textInputMobile = textInputMobile;
    this.typep = typep;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static InNumberBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static InNumberBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.in_number, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static InNumberBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cba;
      TextView cba = ViewBindings.findChildViewById(rootView, id);
      if (cba == null) {
        break missingId;
      }

      id = R.id.cont;
      Button cont = ViewBindings.findChildViewById(rootView, id);
      if (cont == null) {
        break missingId;
      }

      id = R.id.number;
      AutoCompleteTextView number = ViewBindings.findChildViewById(rootView, id);
      if (number == null) {
        break missingId;
      }

      id = R.id.pin;
      EditText pin = ViewBindings.findChildViewById(rootView, id);
      if (pin == null) {
        break missingId;
      }

      id = R.id.postpaid;
      RadioButton postpaid = ViewBindings.findChildViewById(rootView, id);
      if (postpaid == null) {
        break missingId;
      }

      id = R.id.prepaid;
      RadioButton prepaid = ViewBindings.findChildViewById(rootView, id);
      if (prepaid == null) {
        break missingId;
      }

      id = R.id.sub;
      Button sub = ViewBindings.findChildViewById(rootView, id);
      if (sub == null) {
        break missingId;
      }

      id = R.id.textInputMobile;
      TextInputLayout textInputMobile = ViewBindings.findChildViewById(rootView, id);
      if (textInputMobile == null) {
        break missingId;
      }

      id = R.id.typep;
      RadioGroup typep = ViewBindings.findChildViewById(rootView, id);
      if (typep == null) {
        break missingId;
      }

      return new InNumberBinding((RelativeLayout) rootView, cba, cont, number, pin, postpaid,
          prepaid, sub, textInputMobile, typep);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
